a_verb = [
    'abandon',
    'abash',
    'abate',
    'abbreviate',
    'abdicate',
    'abduct',
    'abet',
    'abhor',
    'abide',
    'abjure',
    'ablate',
    'abnegate',
    'aboard',
    'abolish',
    'abort',
    'abridge',
    'absolve',
    'absorb',
    'abuse',
    'accede',
    'accelerate',
    'accept',
    'acclaim',
    'accommodate',
    'accompany',
    'accomplish',
    'accord',
    'account',
    'accrue',
    'accumulate',
    'accuse',
    'ace',
    'ache',
    'achieve',
    'acknowledge',
    'acquire',
    'act',
    'activate',
    'adapt',
    'add',
    'address',
    'adjoin',
    'adjourn',
    'adjust',
    'administer',
    'admire',
    'admit',
    'admonish',
    'adopt',
    'adore',
    'adorn',
    'advance',
    'advertise',
    'advise',
    'advocate',
    'aerate',
    'affiliate',
    'affirm',
    'affix',
    'afflict',
    'affront',
    'agglutinate',
    'aggravate',
    'aggrieve',
    'agitate',
    'agonize',
    'agree',
    'aid',
    'ail',
    'aim',
    'alarm',
    'alert',
    'alienate',
    'align',
    'allow',
    'alter',
    'alternate',
    'amass',
    'amaze',
    'ambition',
    'ambulate',
    'amend',
    'amuse',
    'analyze',
    'animate',
    'annihilate',
    'announce',
    'annoy',
    'answer',
    'antagonize',
    'antecede',
    'anticipate',
    'apologize',
    'appeal',
    'appear',
    'appease',
    'apply',
    'appraise',
    'appreciate',
    'apprehend',
    'approach',
    'appropriate',
    'approve',
    'arch',
    'argue',
    'arise',
    'arouse',
    'arrest',
    'arrive',
    'articulate',
    'ascend',
    'ask',
    'aspirate',
    'assassinate',
    'assemble',
    'assert',
    'assign',
    'assist',
    'associate',
    'assure',
    'atomize',
    'attach',
    'attack',
    'attend',
    'attract',
    'audit',
    'augment',
    'avail',
    'avert',
    'avoid'
    ]
b_verb = [
    'babble',
    'baby',
    'back',
    'back off',
    'back out',
    'backfill',
    'backfire',
    'backhand',
    'backpedal',
    'backtalk',
    'badger',
    'baffle',
    'bail',
    'bake',
    'balance',
    'balk',
    'ban',
    'bang',
    'banish',
    'banter',
    'barbecue',
    'barge',
    'barter',
    'bash',
    'batter',
    'battle',
    'bawl',
    'beam',
    'beat',
    'beautify',
    'beckon',
    'become',
    'bedevil',
    'befall',
    'befit',
    'befoul',
    'befuddle',
    'begrudge',
    'behave',
    'behead',
    'behoove',
    'believe',
    'bellow',
    'belong',
    'bend',
    'benefit',
    'bequeath',
    'bequest',
    'berate',
    'beribbon',
    'beseech',
    'beset',
    'besiege',
    'besprinkle',
    'bestow',
    'bet',
    'betray',
    'bewilder',
    'bewitch',
    'bicker',
    'bind',
    'blame',
    'blare',
    'blast',
    'blaze',
    'blazon',
    'bleed',
    'blemish',
    'blend',
    'blink',
    'blister',
    'block',
    'bluff',
    'blunt',
    'bluster',
    'bob',
    'boil',
    'bolster',
    'bolt',
    'bombard',
    'bond',
    'boom',
    'boost',
    'boot',
    'bore',
    'borrow',
    'bother',
    'bounce',
    'bound',
    'box',
    'boycott',
    'brainwash',
    'brandish',
    'brawl',
    'breach',
    'break',
    'breed',
    'brew',
    'brush',
    'budget',
    'buffet',
    'build',
    'bullyrag',
    'bump',
    'burglarize',
    'burgle',
    'burn',
    'burst',
    'bustle',
    'buy',
    'buzz'
    ]
c_verb = [
    'cache',
    'cackle',
    'cage',
    'cajole',
    'calculate',
    'camouflage',
    'cancel',
    'canter',
    'caper',
    'capitalize',
    'capsize',
    'capture',
    'careen',
    'caress',
    'carve',
    'cast',
    'catalogue',
    'catapult',
    'catch',
    'cater',
    'cause',
    'cease',
    'celebrate',
    'centralize',
    'chafe',
    'challenge',
    'change',
    'char',
    'charge',
    'chase',
    'chastise',
    'chatter',
    'chauffeur',
    'cheat',
    'cheer',
    'cherish',
    'chew',
    'chide',
    'chill',
    'chink',
    'chisel',
    'choke',
    'choose',
    'chuck',
    'chuckle',
    'circumvent',
    'cite',
    'civilize',
    'claim',
    'clamor',
    'clap',
    'clarify',
    'clash',
    'clasp',
    'classify',
    'cleanse',
    'click',
    'clip',
    'close',
    'club',
    'clutch',
    'coach',
    'coax',
    'cobble',
    'coddle',
    'codify',
    'coil',
    'coincide',
    'collaborate',
    'collapse',
    'collect',
    'collide',
    'comb',
    'combat',
    'combust',
    'command',
    'commence',
    'comment',
    'commit',
    'communicate',
    'compare',
    'compete',
    'complain',
    'complicate',
    'compliment',
    'compose',
    'compound',
    'comprehend',
    'compress',
    'compromise',
    'compute',
    'conceal',
    'concede',
    'concentrate',
    'conclude',
    'concoct',
    'condemn',
    'condense',
    'conduct',
    'coexist',
    'confess',
    'confuse',
    'congeal',
    'congratulate',
    'congregate',
    'conjugate',
    'connect',
    'conquer',
    'consent',
    'conserve',
    'consider',
    'consist',
    'console',
    'construct',
    'consume',
    'contact',
    'contemplate',
    'contend',
    'continue',
    'contract',
    'contribute',
    'contrive',
    'control',
    'convenient',
    'converse',
    'convert',
    'convince',
    'cook',
    'coordinate',
    'copy',
    'correct',
    'correspond',
    'corrupt',
    'cough',
    'cower',
    'crack',
    'crackle',
    'cram',
    'crane',
    'crash',
    'crave',
    'crawl',
    'craze',
    'crease',
    'create',
    'creep',
    'cripple',
    'criticize',
    'croak',
    'cross',
    'crow',
    'crumple',
    'crunch',
    'crush',
    'cry',
    'cuddle',
    'cudgel',
    'cull',
    'cultivate',
    'cupboard',
    'cut'
    ]
d_verb = [
    'dab',
    'dabble',
    'dado',
    'daft',
    'dally',
    'dam',
    'damage',
    'dance',
    'dandify',
    'dandle',
    'danger',
    'dangle',
    'dapple',
    'dare',
    'dark',
    'darn',
    'dart',
    'dash',
    'daub',
    'daunt',
    'dawdle',
    'daze',
    'dazzle',
    'deal',
    'debate',
    'debit',
    'decapitate',
    'deceive',
    'decide',
    'declare',
    'decline',
    'decommission',
    'decompress',
    'decongest',
    'decontaminate',
    'decriminalize',
    'decry',
    'dedicate',
    'deduce',
    'deduct',
    'deem',
    'defeat',
    'defend',
    'deflate',
    'deform',
    'defuse',
    'defy',
    'delay',
    'delete',
    'delineate',
    'deliver',
    'delude',
    'delve',
    'demand',
    'demean',
    'demolish',
    'demonstrate',
    'denounce',
    'deny',
    'depart',
    'depend',
    'depict',
    'depolarize',
    'deposit',
    'derive',
    'descend',
    'describe',
    'descry',
    'desert',
    'deserve',
    'designate',
    'design',
    'destroy',
    'detach',
    'detect',
    'deteriorate',
    'determine',
    'detonate',
    'devastate',
    'develop',
    'deviate',
    'devise',
    'devour',
    'diagram',
    'dial',
    'dialogue',
    'dice',
    'diminish',
    'dine',
    'dip',
    'direct',
    'disagree',
    'disapprove',
    'discharge',
    'discipline',
    'discover',
    'discriminate',
    'disembark',
    'disencumber',
    'disfigure',
    'disgrace',
    'disintegrate',
    'dismiss',
    'disobey',
    'disorient',
    'disown',
    'dispatch',
    'dispense',
    'dispose',
    'dispute',
    'disquiet',
    'disregard',
    'dissemble',
    'dissolve',
    'dissuade',
    'distill',
    'distinguish',
    'distribute',
    'dive',
    'divulge',
    'do',
    'document',
    'dominate',
    'don',
    'donate',
    'doodle',
    'double',
    'downsize',
    'doze',
    'drafted',
    'drag',
    'drain',
    'draw',
    'dream',
    'drench',
    'dress',
    'dribble',
    'drift',
    'drink',
    'drip',
    'drive',
    'drizzle',
    'droop',
    'drop',
    'drowse',
    'dump',
    'dupe',
    'duplicate',
    'dwell',
    'dye'
    ]
e_verb = [
    'early',
    'earn',
    'earth',
    'ease',
    'eavesdrop',
    'ebb',
    'ebonize',
    'echo ',
    'economize',
    'edit',
    'educate',
    'efface',
    'eject',
    'elect',
    'electrocute',
    'element',
    'elevate',
    'eliminate',
    'embattle',
    'embed',
    'embrace',
    'emerge',
    'emigrate',
    'emit',
    'emphasize',
    'empower',
    'enact',
    'enchant',
    'encounter',
    'encourage',
    'encumber',
    'end',
    'endanger',
    'endorse',
    'endure',
    'enforce',
    'engrave',
    'engross',
    'engulf',
    'enhance',
    'enlighten',
    'enrage',
    'enroll',
    'ensnare',
    'entangle',
    'enter',
    'entitle',
    'envelop',
    'envisage',
    'epitomize',
    'equate',
    'eradicate',
    'erase',
    'erect',
    'erode',
    'erupt',
    'escalate',
    'escape',
    'escort',
    'espy',
    'establish',
    'etch',
    'eulogize',
    'evaluate',
    'evangelize',
    'evaporate',
    'evoke',
    'evolve',
    'exacerbate',
    'examine',
    'exasperate',
    'exchange',
    'excite',
    'exclaim',
    'exclude',
    'excuse',
    'execute',
    'exemplify',
    'exfoliate',
    'exhaust',
    'exhibit',
    'exhilarate',
    'exist',
    'expect',
    'exit',
    'exonerate',
    'expand',
    'expire',
    'explain',
    'explode',
    'explore',
    'expose',
    'express',
    'expunge',
    'extend',
    'exterminate',
    'extol',
    'extract',
    'exude'
    ]
f_verb = [
    'fable',
    'fabric',
    'fabricate',
    'face',
    'facilitate',
    'factor',
    'factorize',
    'fade',
    'fail',
    'faint',
    'fake',
    'fall',
    'falter',
    'fantasize',
    'fare',
    'fascinate',
    'favor',
    'fax',
    'feature',
    'feign',
    'fend',
    'fetch',
    'fight',
    'fire',
    'fit',
    'fixate',
    'flail',
    'flap',
    'flash',
    'flatten',
    'flatter',
    'flaunt',
    'fledge',
    'flee',
    'flex',
    'flick',
    'flicker',
    'flinch',
    'fling',
    'flip',
    'flirt',
    'flit',
    'float',
    'flock',
    'flog',
    'flood',
    'flop',
    'flounce',
    'flounder',
    'flow',
    'fluctuate',
    'fluff',
    'flush',
    'flutter',
    'flux',
    'fly',
    'flyspeck',
    'foam',
    'fold',
    'follow',
    'fool',
    'foray',
    'forbear',
    'forbid',
    'force',
    'forecast',
    'forge',
    'forget',
    'forgive',
    'forgo',
    'form',
    'format',
    'forsake',
    'foster',
    'found',
    'fracture',
    'frame',
    'freak',
    'freeze',
    'fret',
    'frighten',
    'frisk',
    'frolic',
    'frown',
    'fry',
    'fulminate',
    'fumble',
    'fume',
    'furls',
    'furnish',
    'furor',
    'fuse'
    ]
g_verb = [
    'gab',
    'gad',
    'gag',
    'gage',
    'gain',
    'gall',
    'gallop',
    'gamble',
    'gambol',
    'gander',
    'gape',
    'garner',
    'garnish',
    'gash',
    'gasp',
    'gate',
    'gather',
    'gaze',
    'generate',
    'gerrymander',
    'gesticulate',
    'gesture',
    'giggle',
    'gladden',
    'glance',
    'glare',
    'glaze',
    'gleam',
    'glide',
    'glisten',
    'gloat',
    'glorify',
    'gloss',
    'glow',
    'gnaw',
    'gobble',
    'gossip',
    'govern',
    'grab',
    'graduate',
    'grant',
    'grapple',
    'grasp',
    'grate',
    'gratify',
    'gravitate',
    'grease',
    'greet',
    'grieve',
    'grill',
    'grimace',
    'grip',
    'gripe',
    'growl',
    'grunt',
    'guard',
    'guess',
    'guide',
    'gulp',
    'guzzle'
    ]
h_verb  = [
   'habilitate',
    'habituate',
    'hack',
    'haggle',
    'hail',
    'halloo',
    'halt',
    'hammer',
    'hamper',
    'handle',
    'hang',
    'hanker',
    'happen',
    'harass',
    'harden',
    'harmonize',
    'harvest',
    'hassle',
    'hasten',
    'hatch',
    'hate',
    'haul',
    'haunt',
    'head',
    'hear',
    'heat',
    'heave',
    'heckle',
    'heed',
    'hem',
    'hesitate',
    'hibernate',
    'hiccup',
    'hide',
    'hie',
    'hightail',
    'hike',
    'hinder',
    'hint',
    'hire',
    'hiss',
    'hitch',
    'hoard',
    'hobble',
    'hoist',
    'hold',
    'holler',
    'hollow',
    'homogenize',
    'honk',
    'hoot',
    'hop',
    'hope',
    'hound',
    'hove',
    'howl',
    'hug',
    'hum',
    'humanize',
    'humble',
    'humiliate',
    'hunger',
    'hunt',
    'hurdle',
    'hurl',
    'hustle',
    'hyper',
    ]
i_verb  = [
    'identify',
    'idle',
    'ignite',
    'ignore',
    'illuminate',
    'illustrate',
    'imagine',
    'imitate',
    'impact',
    'impair',
    'impale',
    'impeach',
    'impersonate',
    'implement',
    'imply',
    'implode',
    'implore',
    'impound',
    'impress',
    'improve',
    'inaugurate',
    'incarcerate',
    'incline',
    'include',
    'incubate',
    'indicate',
    'indoctrinate',
    'indulge',
    'infatuation',
    'infiltrate',
    'inflame',
    'inflate',
    'inflict',
    'influence',
    'inform',
    'infuriate',
    'ingest',
    'inhabit',
    'inhale',
    'inhibit',
    'innovate',
    'inoculate',
    'inquire',
    'inscribe',
    'insert',
    'insinuate',
    'insist',
    'inspect',
    'inspire',
    'install',
    'instruct',
    'insure',
    'intensify',
    'interject',
    'interpret',
    'interrogate',
    'interrupt',
    'intertwine',
    'intervene',
    'interviewe',
    'intimate',
    'intimidate',
    'introduce',
    'invent',
    'invert',
    'investigate',
    'invigorate',
    'invite',
    'irk',
    'irritate',
    'issue'
    ]
j_verb = [
     'jab',
    'jabber',
    'jack',
    'jag',
    'jam',
    'jangle',
    'jar',
    'jaw',
    'jaywalk',
    'jeer',
    'jeopardize',
    'jerk',
    'jettison',
    'jig',
    'jiggle',
    'jingle',
    'jinx',
    'jog',
    'join',
    'joist',
    'joke',
    'jolt',
    'jounce',
    'joust',
    'judge',
    'juggle',
    'jumble',
    'jump',
    'justify'
     ]
k_verb = [
    'keel',
    'keelhaul',
    'keep',
    'ken',
    'kidnap',
    'kill',
    'kindle',
    'kiss',
    'kneel',
    'knit',
    'knock',
    'knot',
    'knuckle'
    ]
l_verb = [
    'labor',
    'lacerate',
    'lampoon',
    'lap',
    'lapse',
    'last',
    'latch',
    'lather',
    'laugh',
    'launch',
    'lay',
    'lead',
    'leak',
    'lean',
    'leap',
    'learn',
    'lecture',
    'lend',
    'lengthen',
    'level',
    'levitate',
    'liberalize',
    'lick',
    'lie',
    'lift',
    'limber',
    'limn',
    'limp',
    'linger',
    'lionize',
    'liquefy',
    'liquidate',
    'listen',
    'live',
    'load',
    'loaf',
    'loathe',
    'lock',
    'log',
    'loiter',
    'look',
    'looms',
    'loose',
    'lope',
    'lounge',
    'lout',
    'love',
    'lug',
    'lumber',
    'lunge',
    'lurch',
    'lure',
    'lurk'
    ]
m_verb = [
    'mace',
    'magnify',
    'maim',
    'maintain',
    'make',
    'maltreat',
    'manage',
    'maneuver',
    'mangle',
    'manhandle',
    'manifest',
    'manufacture',
    'mar',
    'maraud',
    'march mark',
    'market',
    'marry',
    'mate',
    'maul',
    'meander',
    'meddle',
    'meditate',
    'meet',
    'menace',
    'mend',
    'mention',
    'merge',
    'mesmerize',
    'mimic',
    'mingle',
    'minimize',
    'misapprehend',
    'misbehave',
    'miscarry',
    'misplace',
    'mistreat',
    'mistreat',
    'mitigate',
    'mix',
    'mock',
    'moisten',
    'molest',
    'monitor',
    'mortify',
    'motivate',
    'mourn',
    'move',
    'mow',
    'muffle',
    'mumble',
    'mummify',
    'munch',
    'murder',
    'mutilate',
    'mystify',
    ]
n_verb = [
    'nab',
    'nag',
    'nail',
    'nap',
    'navigate',
    'neaten',
    'negate',
    'neglect',
    'negotiate',
    'nestle',
    'neutralize',
    'nibble',
    'nick',
    'nip',
    'nominate',
    'notch',
    'note',
    'notify',
    'nourish',
    'nudge',
    'nullify',
    'number',
    'nurse',
    'nurture']
o_verb = [
    'obey',
    'object',
    'objective',
    'obligate',
    'obliterate',
    'obscure',
    'observe',
    'obsess',
    'obstruct',
    'obtain',
    'occlude',
    'occupy',
    'occur',
    'offend',
    'offer',
    'omit',
    'ooze',
    'operate',
    'opine',
    'oppose',
    'oppress',
    'optimize',
    'orate',
    'orbit',
    'ordain',
    'order',
    'organize',
    'originate',
    'oscillate',
    'ought',
    'oust',
    'outgun',
    'outline',
    'over',
    'overbear',
    'overcome',
    'overhear',
    'overlap',
    'overlook',
    'overpower',
    'oversee',
    'overwhelm',
    'oxidize',
    'oxygenate',
    'oxygenize',
    ]
p_verb = [
    'pace'
    'pacify',
    'pack',
    'pain',
    'paint',
    'palpitates',
    'pamper',
    'panic',
    'pant',
    'pantomime',
    'parade',
    'paralyze',
    'pardon',
    'park',
    'parley',
    'parse',
    'partake',
    'participate',
    'patch',
    'patronize',
    'pause',
    'pave',
    'pay',
    'peddle',
    'peek',
    'penalize',
    'penetrate',
    'perceive',
    'perforate',
    'perform',
    'perish',
    'perjure',
    'permit',
    'persecute',
    'personalize',
    'perspire',
    'persuade',
    'pester',
    'pet',
    'pick',
    'pierce',
    'pinch',
    'pitch',
    'placate',
    'place',
    'plague',
    'plan',
    'plant',
    'plead',
    'pledge',
    'plop',
    'pluck',
    'plug',
    'plunder',
    'plunge',
    'point',
    'poise',
    'poke',
    'ponder',
    'pontificate',
    'pop',
    'portray',
    'pose',
    'position',
    'possess',
    'post',
    'postpone',
    'pounce',
    'pound',
    'pour',
    'pout',
    'praise',
    'prance',
    'prattle',
    'preach',
    'preclude',
    'preen',
    'prefer',
    'premix',
    'prepare',
    'prerecord',
    'prescribe',
    'present',
    'press',
    'presume',
    'pretend',
    'prevent',
    'preview',
    'prick',
    'print',
    'prioritize',
    'proceed',
    'produce',
    'progress',
    'prohibit',
    'promenade',
    'promise',
    'propel',
    'prosper',
    'protect',
    'protest',
    'protrude',
    'provide',
    'provoke',
    'prune',
    'pry',
    'publicize',
    'publishe',
    'pucker',
    'puff',
    'pull',
    'pulverize',
    'pummel',
    'pump',
    'punch',
    'puncture',
    'punish',
    'purify',
    'purse',
    'pursue',
    'push',
    'putt',
    'putter' ]
q_verb = [
    'quack',
    'quaff',
    'quake',
    'qualify',
    'quarrel',
    'quarter',
    'quench',
    'quest',
    'question',
    'quibble',
    'quicken',
    'quiet',
    'quit',
    'quiver',
    'quiz',
    'quote' 
]
r_verb = [
    'race',
    'rack'
    'radiate',
    'rage',
    'raid',
    'raise',
    'rake',
    'ram',
    'ramble',
    'rant',
    'rap',
    'rappel',
    'rapture',
    'rasp',
    'rate',
    'ratify',
    'rattle',
    'ravage',
    'ravish',
    'raze',
    'read',
    'readjust',
    'rear',
    'reassure',
    'rebel',
    'rebound',
    'rebuff',
    'rebuke',
    'receive',
   'recite',
    'reckon',
    'recommend',
    'reconsider',
    'record',
    'recover',
    'recruit',
    'rectify',
    'redeem',
    'redevelop',
    'redirect',
    'redo',
    'reduce',
    'refer',
    'refrain',
    'regain',
    'regard',
    'register',
    'regress',
    'regulate',
    'rehearse',
    'reject',
    'relate',
    'relax',
    'relinquish',
    'relish',
    'rely',
    'remain',
    'observe',
    'remember',
    'remind',
    'reminisce',
    'rend',
    'renounce',
    'reorganize',
    'repair',
    'repeat',
    'repel',
    'replace',
    'replenish',
    'reply',
    'report',
    'reprehend',
    'reprimand',
    'reproach',
    'request',
    'require',
    'rescue',
    'research',
    'reserve',
    'reside',
    'resign',
    'resist',
    'resolve',
    'respond',
    'restrain',
    'result',
    'resuscitate',
    'retain',
    'retch',
    'retort',
    'retract',
    'retreat',
    'return',
    'reverberate',
    'revere',
    'reverse',
    'review',
    'revolt',
    'reward',
    'rewash',
    'ricochet',
    'ridicule',
    'riot',
    'rip',
    'ripple',
    'rise',
    'roam',
    'roar',
    'rock',
    'roll',
    'rollerblade',
    'romp',
    'rot',
    'rotate',
    'rout',
    'rove',
    'rub',
    'rue',
    'ruffle',
    'ruin',
    'rumble',
    'rupture' ]
s_verb = [
    'sack',
    'sacrifice',
    'sag',
    'sail',
    'salute',
    'salvage',
    'sanction',
    'sanitize',
    'saunter',
    'save',
    'savor',
    'scamper',
    'scatter',
    'scheme',
    'scoffs',
    'scoots',
    'scorch',
    'score',
    'scour',
    'scourge',
    'scout',
    'scowl',
    'scrape',
    'scratch',
    'scream',
    'screech',
    'scribble',
    'scroll',
    'scrub',
    'scrutinize',
    'scurry',
    'scuttle',
    'sear',
    'search',
    'secure',
    'seduce',
    'seek',
    'seep',
    'segregate',
    'seize',
    'select',
    'separate',
    'serve',
    'settle',
    'sew',
    'shake',
    'shame',
    'shanghai',
    'shape',
    'shatter',
    'shave',
    'shear',
    'shield',
    'shift',
    'shimmer',
    'shine',
    'shirk',
    'shiver',
    'shock',
    'shoot',
    'shop',
    'shout',
    'shove',
    'show',
    'shred',
    'shriek',
    'shrink',
    'shrug',
    'shuffle',
    'shun',
    'shut',
    'siege',
    'sigh',
    'simmer',
    'simper',
    'simplify',
    'singe',
    'sip',
    'sizzle',
    'sketch',
    'skewer',
    'skid',
    'skim',
    'skip',
    'skulk',
    'slacken',
    'slam',
    'slap',
    'slash',
    'slather',
    'slaughter',
    'slay',
    'sleep',
    'slice',
    'slide',
    'sling',
    'slink',
    'slip',
    'slit',
    'slither',
    'slug',
    'slumber',
    'slump',
    'slurp',
    'smack',
    'smear',
    'smell',
    'smile',
    'smirk',
    'smite',
    'smoke',
    'smolder',
    'smuggle',
    'snap',
    'snatch',
    'sneak',
    'sneeze',
    'snicker',
    'sniff',
    'sniffle',
    'snitch',
    'snoop',
    'snort',
    'snuggle',
    'soak',
    'soar',
    'sock',
    'solidify',
    'solve',
    'soon',
    'soothe',
    'sort',
    'sow',
    'span',
    'spar',
    'sparkle',
    'speak',
    'speculate',
    'spend',
    'spill',
    'spin',
    'spiritualize',
    'spit',
    'splash',
    'splinter',
    'split',
    'spoil',
    'sponsor',
    'spook',
    'spray',
    'spread',
    'spring',
    'sprinkle',
    'sprint',
    'sprout',
    'squabble',
    'squall',
    'squander',
    'squash',
    'squat',
    'squawk',
    'squeak',
    'squeal',
    'squeeze',
    'squint',
    'squirm',
    'squirt',
    'squish',
    'stab',
    'stack',
    'staff',
    'stain',
    'stall',
    'stammer',
    'stampede',
    'stand',
    'stare',
    'start',
    'startle',
    'starve',
    'state',
    'steel',
    'sterilize',
    'stick',
    'stimulate',
    'stock',
    'stomp',
    'stoop',
    'store',
    'streak',
    'stretch',
    'strike',
    'stroke',
    'stroll',
    'struggle',
    'study',
    'stuff',
    'stumble',
    'stun',
    'stutter',
    'subdue',
    'subjugate',
    'submit',
    'substantiate',
    'substitute',
    'subtract',
    'succeed',
    'succumb',
    'sue',
    'suggest',
    'sulk',
    'summersault',
    'summon',
    'superimpose',
    'supervised',
    'surf',
    'surmise',
    'surpass',
    'surveyed',
    'suspect',
    'sustain',
    'swab',
    'swallow',
    'swamp',
    'swap',
    'swarm',
    'swat',
    'sway',
    'sweat',
    'sweep',
    'swell',
    'swim',
    'swindle',
    'swing',
    'swipe',
    'switch',
    'sympathetic',
    'synchronize'
          ]
t_verb = [
    'talk',
    'tackle',
    'tag',
    'tailor',
    'taint',
    'tame',
    'tamp',
    'tamper',
    'tangle',
    'tantalize',
    'tap',
    'taper',
    'target',
    'taste',
    'tatter',
    'tattle',
    'teach',
    'taunt',
    'tear',
    'tease',
    'teeter',
    'tell',
    'tempt',
    'tenant',
    'terminate',
    'terrify',
    'terrorize',
    'testify',
    'thank',
    'thaw',
    'thrash',
    'threaten',
    'thrill',
    'throb',
    'throttle',
    'throw',
    'thwack',
    'thwart',
    'tickle',
    'tie',
    'tighten',
    'timely',
    'tinge',
    'tingle',
    'tip',
    'tipple',
    'toil',
    'tolerate',
    'topple',
    'torment',
    'torture',
    'toss',
    'total',
    'tote',
    'totter',
    'touch',
    'tow',
    'trace',
    'trade',
    'trail',
    'train',
    'traipse',
    'trample',
    'transfer',
    'translate',
    'transport',
    'transverse',
    'trap',
    'travel',
    'tread',
    'treat',
    'trek',
    'tremble',
    'trick',
    'trill',
    'trim',
    'trip',
    'triumph',
    'tromp',
    'trot',
    'trounce',
    'trudge',
    'truncate',
    'tuck',
    'tumble',
    'turn',
    'tweak',
    'twinkle',
    'twirl',
    'twist',
    'twit',
    'twitch',
    'type', ]
u_verb = [
    'unbend',
    'uncover',
    'uncross',
    'uncurl',
    'underacheive',
    'underestimate',
    'unload',
    'undergo',
    'undermine',
    'underpay',
    'underplay',
    'underrate',
    'underscore',
    'undershoot',
    'undersold',
    'understand',
    'undertake',
    'undo',
    'undress',
    'undulate',
    'unearth',
    'unfasten',
    'unfold',
    'unfurl',
    'unify',
    'uninstall',
    'unite',
    'unlatch',
    'unleash',
    'unlock',
    'unoccupied',
    'unpack',
    'unveil',
    'upholster',
    'uproot',
    'upset',
    'urge',
    'use',
    'usurp',
    'utilize',
    'utilized',
    'utter',
    ]
v_verb = [
    'vacate',
    'vaccinate',
    'validate',
    'vandalize',
    'vanish',
    'vanquish',
    'vaporize',
    'variegate',
    'vast',
    'vault',
    'veer',
    'view',
    'venture',
    'verify',
    'veto',
    'vex',
    'Vibrates',
    'victimize',
    'view',
    'vilify',
    'vindicate',
    'void',
    'volunteer',
    'vomit',
    'vote' ]
w_verb = [
    'waddle',
    'waft',
    'wag',
    'wait',
    'wake',
    'wallop',
    'wallow',
    'wander',
    'warble',
    'waver',
    'wave',
    'waylay',
    'weaken',
    'wean',
    'wear',
    'weave',
    'wed',
    'wedge',
    'weed',
    'weep',
    'welcome',
    'wheeze',
    'whiff',
    'whimper',
    'whine',
    'whisper',
    'whistle',
    'wiggle',
    'willow',
    'wilt',
    'win',
    'wind',
    'wink',
    'wipe',
    'wish',
    'withdraw',
    'withhold',
    'wobble',
    'wonder',
    'work',
    'worry',
    'worship',
    'wrap',
    'wreck',
    'wrest',
    'wrestle',
    'wring',
    'wrinkle',
    'write'
    ]
x_verb = [
    'xerox',
    'x-ray'
    ]
y_verb = [
    'yak',
    'yammer',
    'yap',
    'yawl',
    'yawn',
    'yawp',
    'yaw',
    'yearn',
    'yell',
    'yelp',
    'yield'
    ]
z_verb = []
#############################################################
a_verb_past = [
    'abandoned',
    'abashed',
    'abated',
    'abbreviated',
    'abdicated',
    'abducted',
    'abetted',
    'abhorred',
    'abided',
    'abjured',
    'ablated',
    '-------',
    '-------',
    'abolished',
    'aborted',
    'abridged',
    'absolved',
    'absorbed',
    'abused',
    '-------',
    'accelerated',
    'accepted',
    'acclaimed',
    'accommodated',
    'accompanied',
    'accomplished',
    'accorded',
    'accounted',
    '-------',
    'accumulated',
    'accused',
    '------',
    'ached',
    'achieved',
    'acknowledged',
    'acquired',
    'acted',
    'activated',
    'adapted',
    'added',
    'addressed',
    'adjoined',
    'adjourned',
    'adjusted',
    'administered',
    'admired',
    'admited',
    'admonished',
    'adopted',
    'adored',
    'adorned',
    'advanced',
    'advertised',
    'advised',
    'advocated',
    'aerated',
    'affiliated',
    'affirmed',
    'affixed',
    'afflicted',
    'affronted',
    'agglutinated',
    'aggravated',
    'aggrieved',
    'agitated',
    'agonized',
    'agreed',
    'aided',
    'ailed',
    'aimed',
    'alarmed',
    'alerted',
    'alienated',
    'aligned',
    'allowed',
    'altered',
    'alternated',
    'amassed',
    'amazed',
    'ambitioned',
    'ambulated',
    'amended',
    'amused',
    'analyzed',
    'animated',
    'annihilated',
    'announced',
    'annoyed',
    'answered',
    'antagonized',
    'anteceded',
    'anticipated',
    'apologized',
    'appealed',
    'appeared',
    'appeased',
    'applied',
    'appraised',
    'appreciated',
    'apprehended',
    'approached',
    'appropriated',
    'approved',
    'arched',
    'argued',
    'arised',
    'aroused',
    'arrested',
    'arrived',
    'articulated',
    'ascended',
    'asked',
    'aspirated',
    'assassinated',
    'assembled',
    'asserted',
    'assigned',
    'assisted',
    'associated',
    'assured',
    'atomized',
    'attached',
    'attacked',
    'attended',
    'attracted',
    'audited',
    'augmented',
    'availed',
    'averted',
    'avoided'
    ]
b_verb_past  = [
    'averted',
    'babied',
    'backed',
    'backed off',
    'backed out',
    'backfilled',
    'backfired',
    'backhanded',
    'backpedaled',
    'backtalked',
    'badgered',
    'baffled',
    'bailed',
    'backed',
    'balanced',
    'balked',
    'banned',
    'banged',
    'banished',
    'bantered',
    'barbecued',
    'barged',
    'bartered',
    'bashed',
    'battered',
    'battled',
    'bawled',
    'beamed',
    'beat',
    'beautified',
    'beckoned',
    'becomed',
    'bedeviled',
    'befall',
    'befit',
    'befoul',
    'befuddled',
    'begrudged',
    'behaved',
    'beheaded',
    'behooved',
    'believed',
    'bellowed',
    'belonged',
    'bent',
    'benefited',
    'bequeathed',
    'bequested',
    'berated',
    'beribboned',
    'beseeched',
    'beseted',
    'besieged',
    'besprinkled',
    'bestowed',
    'beted',
    'betraied',
    'bewildered',
    'bewitched',
    'bickered',
    'bound',
    'blamed',
    'blared',
    'blasted',
    'blazed',
    'blazon',
    'bled',
    'blemished',
    'blended',
    'blinked',
    'blistered',
    'blocked',
    'bluffed',
    'blunted',
    'blustered',
    'bobed',
    'boiled',
    'bolstered',
    'bolted',
    'bombard',
    'bonded',
    'boom',
    'boost',
    'booted',
    'bored',
    'borrowed',
    'bothered',
    'bounced',
    'bounded',
    'boxed',
    'boycotted',
    'brainwashed',
    'brandished',
    'brawled',
    'breached',
    'breakded',
    'breeded',
    'brewed',
    'brushed',
    'budgeted',
    'buffeted',
    'built',
    'bullyrageded',
    'bumped',
    'burglarized',
    'burgleed',
    'burnt',
    'burst',
    'bustled',
    'buought',
    'buzzed'
    ]
c_verb_past = [
    'cached',
    'cackled',
    'caged',
    'cajoled',
    'calculated',
    'camouflaged',
    'canceled',
    'cantered',
    'capered',
    'capitalized',
    'capsized',
    'captured',
    'careend',
    'caressed',
    'carved',
    'cast',
    'catalogued',
    'catapulted',
    'caught',
    'catered',
    'caused',
    'ceased',
    'celebrated',
    'centralized',
    'chafed',
    'challenged',
    'changed',
    'charred',
    'charged',
    'chased',
    'chastised',
    'chattered',
    'chauffeured',
    'cheated',
    'cheered',
    'cherished',
    'chewed',
    'chided',
    'chilled',
    'chinked',
    'chiseled',
    'choked',
    'chose',
    'chucked',
    'chuckled',
    'circumvented',
    'cited',
    'civilized',
    'claimed',
    'clamored',
    'claped',
    'clarified',
    'clashed',
    'clasped',
    'classified',
    'cleansed',
    'clicked',
    'cliped',
    'closed',
    'clubed',
    'clutched',
    'coached',
    'coaxed',
    'cobbled',
    'coddle',
    'codify',
    'coiled',
    'coincided',
    'collaborated',
    'collapsed',
    'collected',
    'collided',
    'combed',
    'combatted',
    'combusted',
    'commanded',
    'commenced',
    'commented',
    'commited',
    'communicated',
    'compared',
    'competed',
    'complained',
    'complicated',
    'complimented',
    'composed',
    'compounded',
    'comprehended',
    'compressed',
    'compromised',
    'computed',
    'concealed',
    'conceded',
    'concentrated',
    'concluded',
    'concocted',
    'condemned',
    'condensed',
    'conducted',
    'coexisted',
    'confessed',
    'confused',
    'congealed',
    'congratulated',
    'congregated',
    'conjugated',
    'connected',
    'conquered',
    'consented',
    'conserved',
    'considered',
    'consisted',
    'consoled',
    'constructed',
    'consumed',
    'contacted',
    'contemplated',
    'contended',
    'continued',
    'contracted',
    'contributed',
    'contrived',
    'controled',
    'conveniented',
    'conversed',
    'converted',
    'convinced',
    'cooked',
    'coordinated',
    'copied',
    'corrected',
    'corresponded',
    'corrupted',
    'coughed',
    'cowered',
    'cracked',
    'crackled',
    'crammed',
    'craned',
    'crashed',
    'craved',
    'crawled',
    'crazed',
    'creased',
    'created',
    'creeped',
    'crippled',
    'criticized',
    'croaked',
    'crossed',
    'crowed',
    'crumpled',
    'crunched',
    'crushed',
    'cried',
    'cuddled',
    'cudgelled',
    'culled',
    'cultivated',
    'cupboarded',
    'cut'
    ]
d_verb_past =[
    'dabded',
    'dabbled',
    'dadoed',
    'daft',
    'dallied',
    'damed',
    'damaged',
    'danced',
    'dandified',
    'dandled',
    'dangered',
    'dangled',
    'dappled',
    'dared / durst',
    'darked',
    'darned',
    'darted',
    'dashed',
    'daubed',
    'daunted',
    'dawdled',
    'dazed',
    'dazzled',
    'dealed',
    'debated',
    'debited',
    'decapitated',
    'deceived',
    'decided',
    'declared',
    'declined',
    'decommissioned',
    'decompressed',
    'decongested',
    'decontaminated',
    'decriminalized',
    'decried',
    'dedicated',
    'deduced',
    'deducted',
    'deemed',
    'defeated',
    'defended',
    'deflated',
    'deformed',
    'defused',
    'defied',
    'delayed',
    'deleted',
    'delineated',
    'delivered',
    'deluded',
    'delved',
    'demanded',
    'demeaned',
    'demolished',
    'demonstrated',
    'denounced',
    'denied',
    'departed',
    'depended',
    'depicted',
    'depolarized',
    'deposited',
    'derived',
    'descended',
    'described',
    'descried',
    'deserted',
    'deserved',
    'designated',
    'designed',
    'destroied',
    'detached',
    'detected',
    'deteriorated',
    'determined',
    'detonated',
    'devastated',
    'developed',
    'deviated',
    'devised',
    'devoured',
    'diagramed',
    'dialed',
    'dialogueed',
    'diced',
    'diminished',
    'dined',
    'dipped',
    'directed',
    'disagreed',
    'disapproved',
    'discharged',
    'disciplined',
    'discovered',
    'discriminated',
    'disembarked',
    'disencumbered',
    'disfigured',
    'disgraced',
    'disintegrated',
    'dismissed',
    'disobeyed',
    'disoriented',
    'disowned',
    'dispatched',
    'dispensed',
    'disposed',
    'disputed',
    'disquieted',
    'disregarded',
    'dissembled',
    'dissolved',
    'dissuaded',
    'distilled',
    'distinguished',
    'distributed',
    'dived / dove',
    'divulged',
    'did',
    'documented',
    'dominated',
    'donded',
    'donated',
    'doodled',
    'doubled',
    'downsized',
    'dozed',
    'drafted',
    'draged',
    'drained',
    'drew',
    'dreamed',
    'drenched',
    'dressed',
    'dribbled',
    'drifted',
    'drank',
    'dripped',
    'drove',
    'drizzled',
    'drooped',
    'droped',
    'drowsed',
    'dumped',
    'duped',
    'duplicated',
    'dwelled',
    'dyed'
    ]
e_verb_past =[
    'earlied',
    'earned',
    'earthed',
    'eased',
    'eavesdroppede',
    'ebbed',
    'ebonized',
    'echoed',
    'economized',
    'edited',
    'educated',
    'effaced',
    'ejected',
    'elected',
    'electrocuted',
    'elemented',
    'elevated',
    'eliminated',
    'embattled',
    'embedded',
    'embraced',
    'emerged',
    'emigrated',
    'emited',
    'emphasized',
    'empowered',
    'enacted',
    'enchanted',
    'encountered',
    'encouraged',
    'encumbered',
    'ended',
    'endangered',
    'endorsed',
    'endured',
    'enforced',
    'engraved',
    'engrossed',
    'engulfed',
    'enhanced',
    'enlightened',
    'enraged',
    'enrolled',
    'ensnared',
    'entangled',
    'entered',
    'entitled',
    'enveloped',
    'envisaged',
    'epitomized',
    'equated',
    'eradicated',
    'erased',
    'erected',
    'eroded',
    'erupted',
    'escalated',
    'escaped',
    'escorted',
    'espied',
    'established',
    'etched',
    'eulogized',
    'evaluated',
    'evangelized',
    'evaporated',
    'evoked',
    'evolved',
    'exacerbated',
    'examined',
    'exasperated',
    'exchanged',
    'excited',
    'exclaimed',
    'excluded',
    'excused',
    'executed',
    'exemplified',
    'exfoliated',
    'exhausted',
    'exhibited',
    'exhilarated',
    'existed',
    'expected',
    'exit',
    'exonerated',
    'expanded',
    'expired',
    'explained',
    'exploded',
    'explored',
    'exposed',
    'expressed',
    'expunged',
    'extended',
    'exterminated',
    'extoled',
    'extracted',
    'exuded'
    ]
f_verb_past = [
    'fabled',
    'fabriced',
    'fabricated',
    'faced',
    'facilitated',
    'factored',
    'factorized',
    'faded',
    'failed',
    'fainted',
    'faked',
    'fell',
    'faltered',
    'fantasized',
    'fared',
    'fascinated',
    'favored',
    'faxed',
    'featured',
    'feigned',
    'fended',
    'fetched',
    'fought',
    'fired',
    'fited',
    'fixated',
    'flailed',
    'flapped',
    'flashed',
    'flattened',
    'flattered',
    'flaunted',
    'fledged',
    'fled',
    'flexed',
    'flicked',
    'flickered',
    'flinched',
    'flung',
    'flipped',
    'flirted',
    'flited',
    'floated',
    'flocked',
    'floged',
    'flooded',
    'floped',
    'flounced',
    'floundered',
    'flew',
    'fluctuated',
    'fluffed',
    'flushed',
    'fluttered',
    'fluxed',
    'flew',
    'flyspecked',
    'foamed',
    'folded',
    'followed',
    'fooled',
    'forayed',
    'forbeared',
    'forbad / forbade',
    'forced',
    'forecasted',
    'forged',
    'forgot',
    'forgave',
    'forwent',
    'formed',
    'formatted',
    'forsaked',
    'fostered',
    'found',
    'fractured',
    'framed',
    'freaked',
    'freezed',
    'freted',
    'frightened',
    'frisked',
    'froliced',
    'frowned',
    'fried',
    'fulminated',
    'fumbled',
    'fumed',
    'furlsed',
    'furnished',
    'furored',
    'fused'
    ]
g_verb_past = [
    'gabbed',
    'gaded',
    'gagged',
    'gaged',
    'gained',
    'galled',
    'galloped',
    'gambled',
    'gamboled',
    'gandered',
    'gaped',
    'garnered',
    'garnished',
    'gashed',
    'gasped',
    'gated',
    'gathered',
    'gazed',
    'generated',
    'gerrymandered',
    'gesticulated',
    'gestured',
    'giggled',
    'gladdened',
    'glanced',
    'glared',
    'glazed',
    'gleamed',
    'glided',
    'glistened',
    'gloated',
    'glorified',
    'glossed',
    'glowed',
    'gnawed',
    'gobbled',
    'gossiped',
    'governed',
    'grabbed',
    'graduated',
    'granted',
    'grappled',
    'grasped',
    'grated',
    'gratified',
    'gravitated',
    'greaseed',
    'greeted',
    'grieved',
    'grilled',
    'grimaced',
    'gripped',
    'griped',
    'growled',
    'grunted',
    'guarded',
    'guessed',
    'guided',
    'gulped',
    'guzzled'
    ]
h_verb_past = [
    'habilitated',
    'habituated',
    'hacked',
    'haggled',
    'hailed',
    'hallooed',
    'halted',
    'hammered',
    'hampered',
    'handled',
    'hanged',
    'hankered',
    'happened',
    'harassed',
    'hardened',
    'harmonized',
    'harvested',
    'hassled',
    'hastened',
    'hatched',
    'hated',
    'hauled',
    'haunted',
    'headed',
    'heared',
    'heated',
    'heaved / hove',
    'heckled',
    'heeded',
    'hemed',
    'hesitated',
    'hibernated',
    'hiccuped',
    'hid',
    'hied',
    'hightailed',
    'hiked',
    'hindered',
    'hinted',
    'hired',
    'hissed',
    'hitched',
    'hoarded',
    'hobbled',
    'hoisted',
    'held',
    'hollered',
    'hollowed',
    'homogenized',
    'honked',
    'hooted',
    'hop',
    'hopped',
    'hounded',
    'hoved',
    'howled',
    'hugged',
    'hummed',
    'humanized',
    'humbled',
    'humiliated',
    'hungered',
    'hunted',
    'hurdled',
    'hurled',
    'hustled',
    'hypered'
    ]
i_verb_past = [
   'identified',
    'idled',
    'ignited',
    'ignored',
    'illuminated',
    'illustrated',
    'imagined',
    'imitated',
    'impacted',
    'impaired',
    'impaled',
    'impeached',
    'impersonated',
    'implemented',
    'implied',
    'imploded',
    'implored',
    'impounded',
    'impressed',
    'improved',
    'inaugurated',
    'incarcerated',
    'inclined',
    'included',
    'incubated',
    'indicated',
    'indoctrinated',
    'indulged',
    'infatuation',
    'infiltrated',
    'inflamed',
    'inflated',
    'inflicted',
    'influenced',
    'informed',
    'infuriated',
    'ingested',
    'inhabited',
    'inhaled',
    'inhibited',
    'innovated',
    'inoculated',
    'inquired',
    'inscribed',
    'inserted',
    'insinuated',
    'insisted',
    'inspected',
    'inspired',
    'installed',
    'instructed',
    'insured',
    'intensified',
    'interjected',
    'interpreted',
    'interrogated',
    'interrupted',
    'intertwined',
    'intervened',
    'interviewed',
    'intimated',
    'intimidated',
    'introduced',
    'invented',
    'inverted',
    'investigated',
    'invigorated',
    'invited',
    'irked',
    'irritated',
    'issued'
   ]
j_verb_past = [
   'jabbed',
    'jabbered',
    'jacked',
    'jagged',
    'jammed',
    'jangled',
    'jarred',
    'jawed',
    'jaywalked',
    'jeered',
    'jeopardized',
    'jerked',
    'jettisoned',
    'jigged',
    'jiggled',
    'jingled',
    'jinxed',
    'jogged',
    'joined',
    'joisted',
    'joked',
    'jolted',
    'jounced',
    'jousted',
    'judged',
    'juggled',
    'jumbled',
    'jumped',
    'justified'
   ]
k_verb_past = [
    'keeled',
    'keelhauled',
    'keeped',
    'kened',
    'kidnaped',
    'killed',
    'kindled',
    'kissed',
    'kneeled',
    'knited',
    'knocked',
    'knoted',
    'knuckled',
    ]
l_verb_past = [
    'labored',
    'lacerated',
    'lampooned',
    'lapped',
    'lapsed',
    'lasted',
    'latched',
    'lathered',
    'laughed',
    'launched',
    'laid',
    'led',
    'leaked',
    'leaned / lent',
    'leaped / lept',
    'learned / lernt',
    'lectured',
    'lent',
    'lengthened',
    'leveled',
    'levitated',
    'liberalized',
    'licked',
    'lied / lay',
    'lifted',
    'limbered',
    'limned',
    'limped',
    'lingered',
    'lionized',
    'liquefied',
    'liquidated',
    'listened',
    'lived',
    'loaded',
    'loafed',
    'loathed',
    'locked',
    'loged',
    'loitered',
    'looked',
    'loomsed',
    'loosed',
    'loped',
    'lounged',
    'louted',
    'loved',
    'lugged',
    'lumbered',
    'lunged',
    'lurched',
    'lured',
    'lurked'
    ]
m_verb_past = [
    'maced',
    'magnified',
    'maimed',
    'maintained',
    'made',
    'maltreated',
    'managed',
    'maneuvered',
    'mangled',
    'manhandled',
    'manifested',
    'manufactured',
    'marred',
    'marauded',
    'marched marked',
    'marketed',
    'married',
    'mated',
    'mauled',
    'meandered',
    'meddled',
    'meditated',
    'met',
    'menaced',
    'mended',
    'mentioned',
    'merged',
    'mesmerized',
    'mimiced',
    'mingled',
    'minimized',
    'misapprehended',
    'misbehaved',
    'miscarried',
    'misplaced',
    'mistreated',
    'mistreated',
    'mitigated',
    'mixed',
    'mocked',
    'moistened',
    'molested',
    'monitored',
    'mortified',
    'motivated',
    'mourned',
    'moved',
    'mowed',
    'muffled',
    'mumbled',
    'mummified',
    'munched',
    'murdered',
    'mutilated',
    'mystified'
    ]
n_verb_past = [
    'nabbed',
    'nagged',
    'nailed',
    'naped',
    'navigated',
    'neatened',
    'negated',
    'neglected',
    'negotiated',
    'nestled',
    'neutralized',
    'nibbled',
    'nicked',
    'nipped',
    'nominated',
    'notched',
    'noted',
    'notified',
    'nourished',
    'nudged',
    'nullified',
    'numbered',
    'nursed',
    'nurtured'
    ]
o_verb_past = [
    'obeyed',
    'objected',
    'objective',
    'obligated',
    'obliterated',
    'obscured',
    'observed',
    'obsessed',
    'obstructed',
    'obtained',
    'occluded',
    'occupied',
    'occured',
    'offended',
    'offered',
    'omitted',
    'oozed',
    'operated',
    'opined',
    'opposed',
    'oppressed',
    'optimized',
    'orated',
    'orbited',
    'ordained',
    'ordered',
    'organized',
    'originated',
    'oscillated',
    'ought',
    'ousted',
    'outgunned',
    'outlined',
    'overed',
    'overbeared',
    'overcame',
    'overheared',
    'overlaped',
    'overlooked',
    'overpowered',
    'oversaw',
    'overwhelmed',
    'oxidized',
    'oxygenated',
    'oxygenized'
    ]
p_verb_past = [
    'pacepacified',
    'packed',
    'pained',
    'painted',
    'palpitated',
    'pampered',
    'panicked',
    'panted',
    'pantomimed',
    'paraded',
    'paralyzed',
    'pardoned',
    'parked',
    'parleyed',
    'parsed',
    'partook',
    'participated',
    'patched',
    'patronized',
    'paused',
    'paved',
    'paid',
    'peddled',
    'peeked',
    'penalized',
    'penetrated',
    'perceived',
    'perforated',
    'performed',
    'perished',
    'perjured',
    'permitted',
    'persecuted',
    'personalized',
    'perspired',
    'persuaded',
    'pestered',
    'petted',
    'picked',
    'pierced',
    'pinched',
    'pitched',
    'placated',
    'placed',
    'plagued',
    'planed',
    'planted',
    'pleaded / pled',
    'pledged',
    'plopped',
    'plucked',
    'pluged',
    'plundered',
    'plunged',
    'pointed',
    'poised',
    'poked',
    'pondered',
    'pontificated',
    'popped',
    'portrayed',
    'posed',
    'positioned',
    'possessed',
    'posted',
    'postponed',
    'pounced',
    'pounded',
    'poured',
    'pouted',
    'praised',
    'pranced',
    'prattled',
    'preached',
    'preclude',
    'preened',
    'preferred',
    'premixed',
    'prepared',
    'prerecorded',
    'prescribed',
    'presented',
    'pressed',
    'presumed',
    'pretended',
    'prevented',
    'previewed',
    'pricked',
    'printed',
    'prioritized',
    'proceeded',
    'produced',
    'progressed',
    'prohibited',
    'promenade',
    'promised',
    'propeled',
    'prospered',
    'protected',
    'protested',
    'protruded',
    'provided',
    'provoked',
    'pruned',
    'pried',
    'publicized',
    'published',
    'puckered',
    'puffed',
    'pulled',
    'pulverized',
    'pummeled',
    'pumped',
    'punched',
    'punctured',
    'punished',
    'purified',
    'pursed',
    'pursued',
    'pushed',
    'putted',
    'puttered'
    ]
q_verb_past = [
    'quacked',
    'quaffed',
    'quaked',
    'qualified',
    'quarreled / quarrelled',
    'quartered',
    'quenched',
    'quested',
    'questioned',
    'quibbled',
    'quickened',
    'quieted',
    'quit /quited',
    'quivered',
    'quized',
    'quoted'
    ]
r_verb_past = [
    'raced',
    'rackradiated',
    'raged',
    'raided',
    'raised',
    'raked',
    'rammed',
    'rambled',
    'ranted',
    'rapped',
    'rappelled',
    'raptured',
    'rasped',
    'rated',
    'ratified',
    'rattled',
    'ravaged',
    'ravished',
    'razed',
    'read',
    'readjust',
    'reared',
    'reassured',
    'rebelled',
    'rebounded',
    'rebuffed',
    'rebuked',
    'received',
    'recited',
    'reckoned',
    'recommended',
    'reconsidered',
    'recorded',
    'recovered',
    'recruited',
    'rectified',
    'redeemed',
    'redeveloped',
    'redirected',
    'redid',
    'reduced',
    'referred',
    'refrained',
    'regained',
    'regarded',
    'registered',
    'regressed',
    'regulated',
    'rehearsed',
    'rejected',
    'related',
    'relaxed',
    'relinquished',
    'relished',
    'relied',
    'remained',
    'observed',
    'remembered',
    'reminded',
    'reminisced',
    'rent',
    'renounced',
    'reorganized',
    'repaired',
    'repeated',
    'repeled',
    'replaced',
    'replenished',
    'replied',
    'reported',
    'reprehended',
    'reprimanded',
    'reproached',
    'requested',
    'required',
    'rescued',
    'researched',
    'reserved',
    'resided',
    'resigned',
    'resisted',
    'resolved',
    'responded',
    'restrained',
    'resulted',
    'resuscitated',
    'retained',
    'retched',
    'retorted',
    'retracted',
    'retreated',
    'returned',
    'reverberated',
    'revered',
    'reversed',
    'reviewed',
    'revolted',
    'rewarded',
    'rewashed',
    'ricocheted',
    'ridiculed',
    'rioted',
    'ripped',
    'rippled',
    'rose',
    'roamed',
    'roared',
    'rocked',
    'rolled',
    'rollerbladed',
    'romped',
    'rotted',
    'rotated',
    'routed',
    'roved',
    'rubbed',
    'rued',
    'ruffled',
    'ruined',
    'rumbled',
    'ruptured'
    ]
s_verb_past = [
    'sacked',
    'sacrificed',
    'sagged',
    'sailed',
    'saluted',
    'salvaged',
    'sanctioned',
    'sanitized',
    'sauntered',
    'saved',
    'savored',
    'scampered',
    'scattered',
    'schemed',
    'scoffed',
    'scooted',
    'scorched',
    'scored',
    'scoured',
    'scourged',
    'scouted',
    'scowled',
    'scraped',
    'scratched',
    'screamed',
    'screeched',
    'scribbled',
    'scrolled',
    'scrubbed',
    'scrutinized',
    'scurried',
    'scuttled',
    'seared',
    'searched',
    'secured',
    'seduced',
    'sought',
    'seeped',
    'segregated',
    'seized',
    'selected',
    'separated',
    'served',
    'settled',
    'sewed',
    'shaked',
    'shamed',
    'shanghaied',
    'shaped',
    'shattered',
    'shaved',
    'sheared',
    'shielded',
    'shifted',
    'shimmered',
    'shined / shone',
    'shirked',
    'shivered',
    'shocked',
    'shot',
    'shoped',
    'shouted',
    'shoved',
    'showed',
    'shredded',
    'shrieked',
    'shrank',
    'shrugged',
    'shuffled',
    'shunned',
    'shut',
    'sieged',
    'sigh',
    'simmered',
    'simpered',
    'simplified',
    'singed',
    'sipped',
    'sizzled',
    'sketched',
    'skewered',
    'skidded',
    'skimmed',
    'skiped',
    'skulked',
    'slackened',
    'slammed',
    'slapped',
    'slashed',
    'slathered',
    'slaughtered',
    'slew',
    'slept',
    'sliced',
    'slid',
    'slung',
    'slunk',
    'slipped',
    'slit / slitted',
    'slithered',
    'slugged',
    'slumbered',
    'slumped',
    'slurped',
    'smacked',
    'smeared',
    'smelt / smelled',
    'smiled',
    'smirked',
    'smote',
    'smoked',
    'smoldered',
    'smuggled',
    'snaped',
    'snatched',
    'sneaked',
    'sneezed',
    'snickered',
    'sniffed',
    'sniffled',
    'snitched',
    'snooped',
    'snorted',
    'snuggled',
    'soaked',
    'soared',
    'socked',
    'solidified',
    'solved',
    'soon',
    'soothed',
    'sorted',
    'sowed',
    'spaned',
    'spared',
    'sparkled',
    'spoke',
    'speculated',
    'spent',
    'spilled / spilt',
    'span / spun',
    'spiritualized',
    'spat',
    'splashed',
    'splintered',
    'split',
    'spoiled / spoit',
    'sponsored',
    'spooked',
    'sprayed',
    'spread',
    'sprang',
    'sprinkled',
    'sprinted',
    'sprouted',
    'squabbled',
    'squalled',
    'squandered',
    'squashed',
    'squatted',
    'squawked',
    'squeaked',
    'squealed',
    'squeezed',
    'squinted',
    'squirmed',
    'squirted',
    'squished',
    'stabbed',
    'stacked',
    'staffed',
    'stained',
    'stalled',
    'stammered',
    'stampeded',
    'standed',
    'stared',
    'started',
    'startled',
    'starved',
    'stated',
    'steeled',
    'sterilized',
    'stuck',
    'stimulated',
    'stocke',
    'stomped',
    'stooped',
    'stored',
    'streaked',
    'stretched',
    'struk',
    'stroked',
    'strolled',
    'struggled',
    'studied',
    'stuffed',
    'stumbled',
    'stunned',
    'stuttered',
    'subdued',
    'subjugated',
    'submitted',
    'substantiated',
    'substituted',
    'subtracted',
    'succeeded',
    'succumbed',
    'sued',
    'suggested',
    'sulked',
    'summersaulted',
    'summoned',
    'superimposed',
    'supervised',
    'surfed',
    'surmised',
    'surpassed',
    'surveyed',
    'suspected',
    'sustained',
    'swabbed',
    'swallowed',
    'swamped',
    'swapped',
    'swarmed',
    'swatted',
    'swayed',
    'sweated',
    'swept',
    'swelled',
    'swam',
    'swindled',
    'swung',
    'swiped',
    'switched',
    'sympathetic',
    'synchronized'
    ]
t_verb_past = [
    'talked',
    'tackled',
    'tagged',
    'tailored',
    'tainted',
    'tamed',
    'tamped',
    'tampered',
    'tangled',
    'tantalized',
    'tapped',
    'tapered',
    'targeted',
    'tasted',
    'tattered',
    'tattled',
    'taught',
    'taunted',
    'tore',
    'teased',
    'teetered',
    'told',
    'tempted',
    'tenanted',
    'terminated',
    'terrified',
    'terrorized',
    'testified',
    'thanked',
    'thawed',
    'thrashed',
    'threatened',
    'thrilled',
    'throbbed',
    'throttled',
    'threw',
    'thwacked',
    'thwarted',
    'tickled',
    'tied',
    'tightened',
    'timely',
    'tinged',
    'tingled',
    'tipped',
    'tippled',
    'toiled',
    'tolerated',
    'toppled',
    'tormented',
    'tortured',
    'tossed',
    'totalled',
    'toted',
    'tottered',
    'touched',
    'towed',
    'traced',
    'traded',
    'trailed',
    'trained',
    'traipsed',
    'trampled',
    'transfered',
    'translated',
    'transported',
    'transversed',
    'traped',
    'traveled',
    'trod',
    'treated',
    'treked',
    'trembled',
    'tricked',
    'trilled',
    'trimmed',
    'tripped',
    'triumphed',
    'tromped',
    'trotted',
    'trounced',
    'trudged',
    'truncated',
    'tucked',
    'tumbled',
    'turned',
    'tweaked',
    'twinkled',
    'twirled',
    'twisted',
    'twitted',
    'twitched',
    'typed'
    ]
u_verb_past = [
    'unbent',
    'uncovered',
    'uncrossed',
    'uncurled',
    'underacheive',
    'underestimated',
    'unloaded',
    'underwent',
    'undermined',
    'underpaid',
    'underplayed',
    'underrated',
    'underscored',
    'undershot',
    'undersold',
    'understood',
    'undertook',
    'undo',
    'undressed',
    'undulated',
    'unearthed',
    'unfastened',
    'unfolded',
    'unfurled',
    'unified',
    'uninstalled',
    'united',
    'unlatched',
    'unleashed',
    'unlocked',
    'unoccupied',
    'unpacked',
    'unveilled',
    'upholstered',
    'uprooted',
    'upset',
    'urged',
    'used',
    'usurped',
    'utilize',
    'utilized',
    'uttered'
    ]
v_verb_past = [
    'vacated',
    'vaccinated',
    'validated',
    'vandalized',
    'vanished',
    'vanquished',
    'vaporized',
    'variegated',
    'vast',
    'vaulted',
    'veered',
    'viewed',
    'ventured',
    'verified',
    'vetoed',
    'vexed',
    'Vibrated',
    'victimized',
    'viewed',
    'vilified',
    'vindicated',
    'voided',
    'volunteered',
    'vomited',
    'voted'
    ]
w_verb_past = [
   'waddled',
    'wafted',
    'wagged',
    'waited',
    'woke',
    'walloped',
    'wallowed',
    'wandered',
    'warbled',
    'wavered',
    'waved',
    'waylaid',
    'weakened',
    'weaned',
    'wore',
    'weaved / wove',
    'wedded',
    'wedge',
    'weeded',
    'wept',
    'welcomed',
    'wheezed',
    'whiffed',
    'whimpered',
    'whined',
    'whispered',
    'whistled',
    'wiggled',
    'willowed',
    'wilted',
    'won',
    'winded / wound',
    'winked',
    'wiped',
    'wished',
    'withdrew',
    'withheld',
    'wobbled',
    'wondered',
    'worked',
    'worried',
    'worshipped /worshiped',
    'wraped',
    'wrecked',
    'wrested',
    'wrestled',
    'wrung',
    'wrinkled',
    'wrote'
   ]
x_verb_past = [
    'xerox',
    'x-ray'
    ]
y_verb_past = [
    'yaked',
    'yammered',
    'yapped',
    'yawled',
    'yawned',
    'yawped',
    'yawed',
    'yearned',
    'yelled',
    'yelped',
    'yielded'
    ]
z_verb_past = []
while 1:
    word = raw_input('Enter :')
    if word.startswith('a'):
        con = False
        for i in range(0,len(a_verb)):
            if word == a_verb[i]:
                print a_verb_past[i]
                con = True
            elif i+1 == len(a_verb) and word != a_verb[i] and con == False :
                print 'unable to find .'
                print 'enter to Data Base . '
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    a_verb.append(verb)
                if past_verb:
                    a_verb_past.append(past_verb)
            
    if word.startswith('b'):
        con = False
        for i in range(0,len(b_verb)):
            if word == b_verb[i]:
                print b_verb_past[i]
                con = True
            elif i+1 == len(b_verb) and word != b_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    b_verb.append(verb)
                if past_verb:
                    b_verb_past.append(past_verb)
            

                
    if word.startswith('c'):
        con = False
        for i in range(0,len(c_verb)):
            if word == c_verb[i]:
                print c_verb_past[i]
                con = True
            elif i+1 == len(c_verb) and word != c_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    c_verb.append(verb)
                if past_verb:
                    c_verb_past.append(past_verb)
            
    if word.startswith('d'):
        for i in range(0,len(d_verb)):
            con = False
            if word == d_verb[i]:
                print d_verb_past[i]
                con = True
            elif i+1 == len(d_verb) and word != d_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    d_verb.append(verb)
                if past_verb:
                    d_verb_past.append(past_verb)
            

    if word.startswith('e'):
        con = False
        for i in range(0,len(e_verb)):
            if word == e_verb[i]:
                print e_verb_past[i]
                con = True
            elif i+1 == len(e_verb) and word != e_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    e_verb.append(verb)
                if past_verb:
                    e_verb_past.append(past_verb)
            

                
    if word.startswith('f'):
        con = False
        for i in range(0,len(f_verb)):
            if word == f_verb[i]:
                print f_verb_past[i]
                con = True
            elif i+1 == len(f_verb) and word != f_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    f_verb.append(verb)
                if past_verb:
                    f_verb_past.append(past_verb)
            
    if word.startswith('g'):
        con = False
        for i in range(0,len(g_verb)):
            if word == g_verb[i]:
                print g_verb_past[i]
                con = True
            elif i+1 == len(g_verb) and word != g_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    g_verb.append(verb)
                if past_verb:
                    g_verb_past.append(past_verb)
                
    if word.startswith('h'):
        con = False
        for i in range(0,len(h_verb)):
            if word == h_verb[i]:
                print h_verb_past[i]
                con = True
            elif i+1 == len(h_verb) and word != h_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    h_verb.append(verb)
                if past_verb:
                    h_verb_past.append(past_verb)
                
    if word.startswith('i'):
        con = False
        for i in range(0,len(i_verb)):
            if word == i_verb[i]:
                print i_verb_past[i]
                con = True
            elif i+1 == len(i_verb) and word != i_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    i_verb.append(verb)
                if past_verb:
                    i_verb_past.append(past_verb)
            
    if word.startswith('j'):
        con = False
        for i in range(0,len(j_verb)):
            if word == j_verb[i]:
                print j_verb_past[i]
                con = True
            elif i+1 == len(j_verb) and word != j_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    j_verb.append(verb)
                if past_verb:
                    j_verb_past.append(past_verb)
            
    if word.startswith('k'):
        con = False
        for i in range(0,len(k_verb)):
            if word == k_verb[i]:
                print k_verb_past[i]
                con = True
            elif i+1 == len(k_verb) and word != k_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    k_verb.append(verb)
                if past_verb:
                    k_verb_past.append(past_verb)
                
    if word.startswith('l'):
        con = False
        for i in range(0,len(l_verb)):
            if word == l_verb[i]:
                print l_verb_past[i]
                con = True
            elif i+1 == len(l_verb) and word != l_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    l_verb.append(verb)
                if past_verb:
                    l_verb_past.append(past_verb)
                
    if word.startswith('m'):
        con = False
        for i in range(0,len(m_verb)):
            if word == m_verb[i]:
                print m_verb_past[i]
                con = True
            elif i+1 == len(m_verb) and word != m_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    m_verb.append(verb)
                if past_verb:
                    m_verb_past.append(past_verb)
            
    if word.startswith('n'):
        con = False
        for i in range(0,len(n_verb)):
            if word == n_verb[i]:
                print n_verb_past[i]
                con = True
            elif i+1 == len(n_verb) and word != n_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    n_verb.append(verb)
                if past_verb:
                    n_verb_past.append(past_verb)
                
    if word.startswith('o'):
        con = False
        for i in range(0,len(o_verb)):
            if word == o_verb[i]:
                print o_verb_past[i]
                con = True
            elif i+1 == len(o_verb) and word != o_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    o_verb.append(verb)
                if past_verb:
                    o_verb_past.append(past_verb)
                
    if word.startswith('p'):
        con = False
        for i in range(0,len(p_verb)):
            if word == p_verb[i]:
                print p_verb_past[i]
                con = True
            elif i+1 == len(p_verb) and word != p_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    p_verb.append(verb)
                if past_verb:
                    p_verb_past.append(past_verb)
            
    if word.startswith('q'):
        con = False
        for i in range(0,len(q_verb)):
            if word == q_verb[i]:
                print q_verb_past[i]
                con = True
            elif i+1 == len(q_verb) and word != q_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    q_verb.append(verb)
                if past_verb:
                    q_verb_past.append(past_verb)
                
    if word.startswith('r'):
        con = False
        for i in range(0,len(r_verb)):
            if word == r_verb[i]:
                print r_verb_past[i]
                con = True
            elif i+1 == len(r_verb) and word != r_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    r_verb.append(verb)
                if past_verb:
                    r_verb_past.append(past_verb)
        
    if word.startswith('s'):
        con = False
        for i in range(0,len(s_verb)):
            if word == s_verb[i]:
                print s_verb_past[i]
                con = True
            elif i+1 == len(s_verb) and word != s_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    s_verb.append(verb)
                if past_verb:
                    s_verb_past.append(past_verb)
    
    if word.startswith('t'):
        con = False
        for i in range(0,len(t_verb)):
            if word == t_verb[i]:
                print t_verb_past[i]
                con = True
            elif i+1 == len(t_verb) and word != t_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    t_verb.append(verb)
                if past_verb:
                    t_verb_past.append(past_verb)
                
    if word.startswith('u'):
        con = False
        for i in range(0,len(u_verb)):
            if word == u_verb[i]:
                print u_verb_past[i]
                con = True
            elif i+1 == len(u_verb) and word != u_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    u_verb.append(verb)
                if past_verb:
                    u_verb_past.append(past_verb)
                
    if word.startswith('v'):
        con = False
        for i in range(0,len(v_verb)):
            if word == v_verb[i]:
                print v_verb_past[i]
                con = True
            elif i+1 == len(v_verb) and word != v_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    v_verb.append(verb)
                if past_verb:
                    v_verb_past.append(past_verb)
            
    if word.startswith('w'):
        con = False
        for i in range(0,len(w_verb)):
            if word == w_verb[i]:
                print w_verb_past[i]
                con = True
            elif i+1 == len(w_verb) and word != w_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    w_verb.append(verb)
                if past_verb:
                    w_verb_past.append(past_verb)
                
    if word.startswith('x'):
        con = False
        for i in range(0,len(x_verb)):
            if word == x_verb[i]:
                print x_verb_past[i]
                con = True
            elif i+1 == len(x_verb) and word != x_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    x_verb.append(verb)
                if past_verb:
                    x_verb_past.append(past_verb)
                
    if word.startswith('y'):
        con = False
        for i in range(len(y_verb)):
            if word == y_verb[i]:
                print y_verb_past[i]
                con = True
            elif i+1 == len(y_verb) and word != y_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    y_verb.append(verb)
                if past_verb:
                    y_verb_past.append(past_verb)
                
    if word.startswith('z'):
        con = False
        for i in range(0,len(z_verb)):
            if word == z_verb[i]:
                print z_verb_past[i]
                con = True
            elif i+1 == len(z_verb) and word != z_verb[i] and con == False :
                print 'unable to find .'
#store new one
                verb = raw_input('verb :')
                past_verb = raw_input('past form :')
                if verb:
                    z_verb.append(verb)
                if past_verb:
                    z_verb_past.append(past_verb)
            

                















                
